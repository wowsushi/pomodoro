{"version":3,"sources":["components/AddTask.js","components/TaskGroup.js","components/Clock.js","containers/Home.js","components/ClockSm.js","containers/Todos.js","containers/Analytics.js","containers/Ringtones.js","App.js","serviceWorker.js","index.js"],"names":["AddTask","react_default","a","createElement","class","onSubmit","this","props","handleSubmit","type","name","placeholder","value","task","onChange","handleChange","React","Component","TaskGroup","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$props","taskList","selectTask","page","list","showMore","length","href","slice","i","push","key","id","onClick","bind","e","console","log","concat","Clock","changeClockState","Home","_this","state","count","showActivityTask","Date","now","Math","floor","toString","padStart","clock","components_Clock","components_AddTask","components_TaskGroup","react_router_dom","to","ClockSm","Todos","className","components_ClockSm","Analytics","Ringtones","App","activating","resting","assertThisInitialized","target","setState","preventDefault","newTask","done","prevState","_this2","clearInterval","interval","setInterval","countDown","changeTheme","_this3","forEach","index","unshift","apply","toConsumableArray","splice","clockWrapper","document","querySelector","clockMain","clockBtn","materialIcons","clockDecoration","classList","toggle","innerHTML","_this4","_this$state","react_router","exact","path","render","containers_Home","containers_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f2fdc97.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass AddTask extends React.Component {\r\n  render() {\r\n    return (\r\n      <form class=\"add-task\" onSubmit={this.props.handleSubmit}>\r\n        <input  \r\n          type=\"text\" \r\n          name=\"task\" \r\n          placeholder=\"add a new mission...\" \r\n          value={this.props.task} \r\n          onChange={this.props.handleChange}>\r\n        </input>\r\n        <button type=\"submit\" name=\"task\">+</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTask;","import React from 'react'\r\n\r\nclass TaskGroup extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    let { taskList, selectTask, page }  = this.props\r\n    let list = []\r\n    let showMore = ''\r\n\r\n    switch (page) {\r\n      case 'home':\r\n        if (taskList.length > 1 ) {\r\n          showMore = (taskList.length > 4)? <a href=\"/\">more</a> : ''\r\n\r\n          taskList = taskList.slice(1, 4)\r\n          for (let i=0; i<taskList.length; i++) {\r\n            list.push(\r\n              <li key={taskList[i].id} onClick={selectTask.bind(this, taskList[i].id, this.e )}>{taskList[i].task}\r\n                <i class=\"material-icons\">play_circle_outline</i>\r\n              </li>\r\n            )\r\n          }\r\n        }\r\n        break\r\n      case 'todos':\r\n        for (let i=0; i<taskList.length; i++) {\r\n          list.push(\r\n            <li key={taskList[i].id} onClick={selectTask.bind(this, taskList[i].id, this.e )}>{taskList[i].task}\r\n              <i class=\"material-icons\">play_circle_outline</i>\r\n            </li>\r\n          )\r\n        }\r\n      break\r\n      default:\r\n        console.log('error')\r\n    }\r\n\r\n    return (\r\n      <div class={`tasks-group tasks-group-${page}`}>\r\n        <ul>\r\n          {list}\r\n        </ul>\r\n        {showMore}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskGroup\r\n","import React from 'react'\r\n\r\nclass Clock extends React.Component {\r\n\r\n  render () {\r\n    return (\r\n    <div class=\"clock-wrapper\">\r\n      <div class=\"clock-main\">\r\n        <div class=\"clock-btn\" onClick={this.props.changeClockState}>\r\n          <i class=\"material-icons clock-icon\">play_arrow</i>\r\n          <span class=\"clock-decoration\"></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Clock\r\n","import React from 'react'\r\nimport { HashRouter, Link } from 'react-router-dom'\r\n\r\nimport AddTask from '../components/AddTask.js'\r\nimport TaskGroup from '../components/TaskGroup.js'\r\nimport Clock from '../components/Clock.js'\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state={\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    const { taskList, count } = this.props\r\n\r\n    let showActivityTask = []\r\n    if (taskList.length > 0) {\r\n      showActivityTask.push(\r\n        <div class=\"activity-task\" key={Date.now()}>\r\n          <span class=\"circle-lg main-decoration\"></span>\r\n          <h3>{taskList[0].task}</h3>\r\n          <span class=\"circle-sm sub-decoration\"></span>\r\n          <div>{ Math.floor(count / 60).toString().padStart(2, '0') }\r\n                :{ (count % 60).toString().padStart(2, '0')}\r\n          </div>\r\n        </div>\r\n      )\r\n      this.clock = <Clock changeClockState={this.props.changeClockState}/>\r\n    } else {\r\n      showActivityTask.push(\r\n        <div class=\"activity-task\" key={Date.now()}>\r\n          <h3>No task? Add one.</h3>\r\n        </div>\r\n      )\r\n\r\n      this.clock = \"\"\r\n    }\r\n\r\n  return (\r\n    <div class=\"home\">\r\n      <div class=\"main-panel\">\r\n        <AddTask\r\n          handleChange={this.props.handleChange}\r\n          handleSubmit={this.props.handleSubmit}\r\n          changeClockState={this.props.changeClockState}\r\n          task={this.props.task}\r\n        />\r\n        {showActivityTask}\r\n        <TaskGroup\r\n          taskList={taskList}\r\n          selectTask={this.props.selectTask}\r\n          page='home'\r\n        />\r\n      </div>\r\n      <div class=\"sub-panel\">\r\n        <HashRouter>\r\n          <nav class=\"nav\">\r\n            <ul>\r\n              <li class=\"to-do-list-folded\">\r\n                <Link to=\"/todos\">\r\n                  <i class=\"material-icons\">list</i>\r\n                </Link>\r\n              </li>\r\n\r\n              <li class=\"analytics\">\r\n                <Link to=\"/analytics\">\r\n                  <i class=\"material-icons\">insert_chart</i>\r\n                </Link>\r\n              </li>\r\n\r\n              <li class=\"ringtones\">\r\n                <Link to=\"/ringtones\">\r\n                  <i class=\"material-icons\">library_music</i>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </HashRouter>\r\n        <div class=\"logo\">\r\n          <div>pomodoro</div>\r\n        </div>\r\n      </div>\r\n      {this.clock}\r\n    </div>\r\n  )}\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\nclass ClockSm extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render () {\r\n    const { count, taskList } = this.props\r\n\r\n    return (\r\n      <div class=\"clockSm-main\">\r\n        <div class=\"clockSm-btn\">\r\n          <div class=\"clockSm-btn-inner\">\r\n            <i class=\"material-icons clock-icon\">play_arrow</i>\r\n          </div>\r\n        </div>\r\n        <div class=\"content\">\r\n          <h1>{ Math.floor(count / 60).toString().padStart(2, '0') }\r\n                  :{ (count % 60).toString().padStart(2, '0')}\r\n          </h1>\r\n          <p>{(taskList[0])? taskList[0].task : ''}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ClockSm\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport AddTask from '../components/AddTask.js'\r\nimport TaskGroup from '../components/TaskGroup.js'\r\nimport ClockSm from '../components/ClockSm.js'\r\n\r\nclass Todos extends React.Component {\r\n\r\n  render() {\r\n    const { count, taskList } = this.props\r\n\r\n    return (\r\n      <main className=\"todos\">\r\n        <section>\r\n          <nav class=\"menu\">\r\n            <ul>\r\n              <li class=\"to-do-list-folded\">\r\n                <Link to=\"/todos\">\r\n                  <i class=\"material-icons\">list</i>\r\n                  to - do list\r\n                </Link>\r\n              </li>\r\n\r\n              <li class=\"analytics\">\r\n                <Link to=\"/analytics\">\r\n                  <i class=\"material-icons\">insert_chart</i>\r\n                  analytics\r\n                </Link>\r\n              </li>\r\n\r\n              <li class=\"ringtones\">\r\n                <Link to=\"/ringtones\">\r\n                  <i class=\"material-icons\">library_music</i>\r\n                  ringtones\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <ClockSm count={count} taskList={taskList} changeClockState={this.props.changeClockState}/>\r\n        </section>\r\n        <section class=\"tasks\">\r\n          <AddTask\r\n            handleChange={this.props.handleChange}\r\n            handleSubmit={this.props.handleSubmit}\r\n            changeClockState={this.props.changeClockState}\r\n            task={this.props.task}\r\n          />\r\n          <div className=\"todo-list\">\r\n          <h2>to - do\r\n               <i class=\"material-icons\">\r\n                arrow_drop_up\r\n              </i>\r\n          </h2>\r\n            <TaskGroup\r\n              taskList={this.props.taskList}\r\n              selectTask={this.props.selectTask}\r\n              page=\"todos\"\r\n            />\r\n          </div>\r\n          <div className=\"done-list\">\r\n            <h2>\r\n              done\r\n              <i class=\"material-icons\">\r\n                arrow_drop_down\r\n              </i>\r\n            </h2>\r\n            <TaskGroup\r\n              taskList={this.props.taskList}\r\n              selectTask={this.props.selectTask}\r\n              page=\"todos\"\r\n            />\r\n          </div>\r\n        </section>\r\n        <aside>\r\n          <Link to=\"/\">\r\n            <i class=\"material-icons\">\r\n              cancel\r\n            </i>\r\n          </Link>\r\n          <div class=\"logo\">\r\n            <div>pomodoro</div>\r\n          </div>\r\n        </aside>\r\n      </main>\r\n    )\r\n  }\r\n}\r\nexport default Todos\r\n","import React from 'react'\r\n\r\nclass Analytics extends React.Component {\r\n\r\n  render () {\r\n    return (\r\n    <div class=\"clock-wrapper\">\r\n      Analytics\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Analytics\r\n","import React from 'react'\r\n\r\nclass Ringtones extends React.Component {\r\n\r\n  render () {\r\n    return (\r\n    <div class=\"clock-wrapper\">\r\n  Ringtones\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Ringtones\r\n","import React from 'react'\r\nimport { HashRouter, Route } from 'react-router-dom'\r\n\r\nimport './App.css';\r\nimport Home from './containers/Home.js'\r\nimport Todos from './containers/Todos.js'\r\nimport Analytics from './containers/Analytics.js'\r\nimport Ringtones from './containers/Ringtones.js'\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state={\r\n      task: '',\r\n      taskList: [],\r\n      activating: false,\r\n      resting: false,\r\n      count: 1500\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.changeClockState = this.changeClockState.bind(this)\r\n    this.selectTask = this.selectTask.bind(this)\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { value } = e.target\r\n    this.setState({\r\n      task: value\r\n    })\r\n    console.log('tartet', e.target)\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (!this.state.task) return\r\n\r\n    const newTask = {\r\n      task: this.state.task,\r\n      id: Date.now(),\r\n      done: false\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      taskList: prevState.taskList.concat(newTask),\r\n      task: '',\r\n      id: '',\r\n      done: ''\r\n    }))\r\n  }\r\n\r\n  countDown() {\r\n    this.setState(state => ({\r\n      count: state.count - 1\r\n    }));\r\n  }\r\n\r\n  changeClockState(e) {\r\n\r\n    if (this.state.activating || this.state.resting) {\r\n      // pause\r\n      clearInterval(this.interval);\r\n\r\n    } else {\r\n      // activating\r\n      this.interval = setInterval(() => this.countDown(), 1000);\r\n\r\n    }\r\n    this.setState({ activating: !this.state.activating })\r\n    this.changeTheme()\r\n  }\r\n\r\n  selectTask(id, e) {\r\n    let { taskList } = this.state\r\n\r\n    taskList.forEach((task, index) => {\r\n      if (task.id === id) {\r\n        taskList.unshift(...taskList.splice(index, 1))\r\n\r\n        this.setState({ count: 1500 })\r\n\r\n        if (this.state.activating) {\r\n          this.changeClockState(e)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  changeTheme(state) {\r\n    const clockWrapper = document.querySelector('.clock-wrapper')\r\n    const clockMain = document.querySelector('.clock-main')\r\n    const clockBtn = document.querySelector('.clock-btn')\r\n    const materialIcons = document.querySelector('.clock-btn > .material-icons')\r\n    const clockDecoration = document.querySelector('.clock-decoration')\r\n\r\n    clockWrapper.classList.toggle('sub-theme')\r\n    clockMain.classList.toggle('main-theme')\r\n    clockBtn.classList.toggle('sub-theme')\r\n    materialIcons.innerHTML =  (materialIcons.innerHTML === 'play_arrow') ? 'pause' : 'play_arrow'\r\n    materialIcons.classList.toggle('main-theme-font')\r\n    clockDecoration.classList.toggle('sub-theme')\r\n    console.log('changed')\r\n  }\r\n\r\n  render () {\r\n    const { task,\r\n            taskList,\r\n            activating,\r\n            resting,\r\n            count } = this.state\r\n\r\n    return (\r\n      <HashRouter>\r\n        <Route exact\r\n          path=\"/\"\r\n          render={(props) => (\r\n            <Home\r\n              handleChange={this.handleChange}\r\n              handleSubmit={this.handleSubmit}\r\n              countDown={this.countDown}\r\n              changeClockState={this.changeClockState}\r\n              selectTask={this.selectTask}\r\n              task={task}\r\n              taskList={taskList}\r\n              activating={activating}\r\n              resting={resting}\r\n              count={count}\r\n            />\r\n          )}\r\n\r\n        />\r\n        <Route path=\"/todos\" render={(props) => (\r\n          <Todos\r\n            handleChange={this.handleChange}\r\n            handleSubmit={this.handleSubmit}\r\n            countDown={this.countDown}\r\n            changeClockState={this.changeClockState}\r\n            selectTask={this.selectTask}\r\n            task={task}\r\n            taskList={taskList}\r\n            activating={activating}\r\n            resting={resting}\r\n            count={count}\r\n          />\r\n        )} />\r\n        <Route path=\"/analytics\" component={Analytics} />\r\n        <Route path=\"/ringtones\" component={Ringtones} />\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}