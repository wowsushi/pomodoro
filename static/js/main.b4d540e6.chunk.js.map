{"version":3,"sources":["components/AddTask.js","components/TaskGroup.js","components/Clock.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["AddTask","react_default","a","createElement","class","onSubmit","this","props","handleSubmit","type","name","placeholder","value","task","onChange","handleChange","React","Component","TaskGroup","taskList","list","showMore","length","href","slice","i","push","key","id","Clock","onClick","changeClockState","Container","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","activating","resting","countDown","bind","assertThisInitialized","e","target","setState","preventDefault","newTask","Date","now","prevState","concat","_this2","clearInterval","interval","setInterval","clockWrapper","document","querySelector","clockMain","clockBtn","materialIcons","clockDecoration","classList","toggle","innerHTML","changeTheme","_this$state","showActivityTask","Math","floor","toString","padStart","components_AddTask","components_TaskGroup","components_Clock","App","components_Container","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2MAmBeA,mLAfX,OACEC,EAAAC,EAAAC,cAAA,QAAMC,MAAM,WAAWC,SAAUC,KAAKC,MAAMC,cAC1CP,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACLC,KAAK,OACLC,YAAY,uBACZC,MAAON,KAAKC,MAAMM,KAClBC,SAAUR,KAAKC,MAAMQ,eAEvBd,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASC,KAAK,QAA3B,aAXcM,IAAMC,WC+BbC,mLA9BJ,IACDC,EAAcb,KAAKC,MAAnBY,SACFC,EAAO,GACPC,EAAW,GAEf,GAAIF,EAASG,OAAS,EAAI,CACxBD,EAAYF,EAASG,OAAS,EAAIrB,EAAAC,EAAAC,cAAA,KAAGoB,KAAK,KAAR,QAAuB,GAEzDJ,EAAWA,EAASK,MAAM,EAAG,GAC7B,IAAK,IAAIC,EAAE,EAAGA,EAAEN,EAASG,OAAQG,IAChCL,EAAKM,KACFzB,EAAAC,EAAAC,cAAA,MAAIwB,IAAKR,EAASM,GAAGG,IAAKT,EAASM,GAAGZ,KACpCZ,EAAAC,EAAAC,cAAA,KAAGC,MAAM,kBAAT,yBAOR,OACEH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eACTH,EAAAC,EAAAC,cAAA,UACGiB,GAEFC,UAzBeL,IAAMC,WCefY,mLAZX,OACA5B,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iBACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,YAAY0B,QAASxB,KAAKC,MAAMwB,kBACzC9B,EAAAC,EAAAC,cAAA,KAAGC,MAAM,6BAAT,cACAH,EAAAC,EAAAC,cAAA,QAAMC,MAAM,+BARFY,IAAMC,eC4IXe,cAxHb,SAAAA,EAAYzB,GAAO,IAAA0B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA5B,KAAA0B,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA5B,KAAA4B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAhC,KAAMC,KACDgC,MAAM,CACT1B,KAAM,GACNM,SAAU,GACVqB,YAAY,EACZC,SAAS,EACTC,UAAW,MAEbT,EAAKlB,aAAekB,EAAKlB,aAAa4B,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKzB,aAAeyB,EAAKzB,aAAamC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKF,iBAAmBE,EAAKF,iBAAiBY,KAAtBT,OAAAU,EAAA,EAAAV,CAAAD,IAXPA,4EAcNY,GAAG,IACNjC,EAAUiC,EAAEC,OAAZlC,MACRN,KAAKyC,SAAS,CACZlC,KAAMD,yCAIGiC,GAEX,GADAA,EAAEG,iBACG1C,KAAKiC,MAAM1B,KAAhB,CAEA,IAAMoC,EAAU,CACdpC,KAAMP,KAAKiC,MAAM1B,KACjBe,GAAIsB,KAAKC,OAGX7C,KAAKyC,SAAS,SAAAK,GAAS,MAAK,CAC1BjC,SAAUiC,EAAUjC,SAASkC,OAAOJ,GACpCpC,KAAM,GACNe,GAAI,2CAKNtB,KAAKyC,SAAS,SAAAR,GAAK,MAAK,CACtBG,UAAWH,EAAMG,UAAY,8CAIhBG,GAAG,IAAAS,EAAAhD,KAEdA,KAAKiC,MAAMC,YAAclC,KAAKiC,MAAME,QAEtCc,cAAcjD,KAAKkD,UAInBlD,KAAKkD,SAAWC,YAAY,kBAAMH,EAAKZ,aAAa,KAGtDpC,KAAKyC,SAAS,CAAEP,YAAalC,KAAKiC,MAAMC,aAtE5C,SAAqBD,GACnB,IAAMmB,EAAeC,SAASC,cAAc,kBACtCC,EAAYF,SAASC,cAAc,eACnCE,EAAWH,SAASC,cAAc,cAClCG,EAAgBJ,SAASC,cAAc,gCACvCI,EAAkBL,SAASC,cAAc,qBAE/CF,EAAaO,UAAUC,OAAO,aAC9BL,EAAUI,UAAUC,OAAO,cAC3BJ,EAASG,UAAUC,OAAO,aAC1BH,EAAcI,UAA0C,eAA5BJ,EAAcI,UAA8B,QAAU,aAClFJ,EAAcE,UAAUC,OAAO,mBAC/BF,EAAgBC,UAAUC,OAAO,aA2D/BE,oCAGO,IAAAC,EACyB/D,KAAKiC,MAA7BpB,EADDkD,EACClD,SAAUuB,EADX2B,EACW3B,UAEd4B,EAAmB,GAoBzB,OAnBMnD,EAASG,OAAS,EACpBgD,EAAiB5C,KACfzB,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBAAgBuB,IAAKuB,KAAKC,OACnClD,EAAAC,EAAAC,cAAA,QAAMC,MAAM,8BACZH,EAAAC,EAAAC,cAAA,UAAKgB,EAAS,GAAGN,MACjBZ,EAAAC,EAAAC,cAAA,QAAMC,MAAM,6BACZH,EAAAC,EAAAC,cAAA,WAAOoE,KAAKC,MAAM9B,EAAY,IAAI+B,WAAWC,SAAS,EAAG,KAAzD,KACUhC,EAAY,IAAI+B,WAAWC,SAAS,EAAG,QAKrDJ,EAAiB5C,KACfzB,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBAAgBuB,IAAKuB,KAAKC,OACnClD,EAAAC,EAAAC,cAAA,iCAMNF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cACTH,EAAAC,EAAAC,cAACwE,EAAD,CACE5D,aAAcT,KAAKS,aACnBP,aAAcF,KAAKE,aACnBuB,iBAAkBzB,KAAKyB,iBACvBlB,KAAMP,KAAKiC,MAAM1B,OAElByD,EACDrE,EAAAC,EAAAC,cAACyE,EAAD,CACEzD,SAAUA,KAGdlB,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,OACTH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAM,qBACRH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,kBAAT,SAGFH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,aACRH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,kBAAT,iBAGFH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,aACRH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,kBAAT,oBAINH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,QACTH,EAAAC,EAAAC,cAAA,yBAGJF,EAAAC,EAAAC,cAAC0E,EAAD,CAAO9C,iBAAkBzB,KAAKyB,2BApHZf,IAAMC,WCVf6D,MANf,WACE,OACE7E,EAAAC,EAAAC,cAAC4E,EAAD,OCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOrF,EAAAC,EAAAC,cAACoF,EAAD,MAAS5B,SAAS6B,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b4d540e6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass AddTask extends React.Component {\r\n  render() {\r\n    return (\r\n      <form class=\"add-task\" onSubmit={this.props.handleSubmit}>\r\n        <input  \r\n          type=\"text\" \r\n          name=\"task\" \r\n          placeholder=\"add a new mission...\" \r\n          value={this.props.task} \r\n          onChange={this.props.handleChange}>\r\n        </input>\r\n        <button type=\"submit\" name=\"task\">+</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTask;","import React from 'react'\r\n\r\nclass TaskGroup extends React.Component {\r\n  render() {\r\n    let { taskList }  = this.props\r\n    let list = []\r\n    let showMore = ''\r\n\r\n    if (taskList.length > 1 ) {\r\n      showMore = (taskList.length > 4)? <a href=\"/\">more</a> : ''\r\n\r\n      taskList = taskList.slice(1, 4)\r\n      for (let i=0; i<taskList.length; i++) {\r\n       list.push(\r\n          <li key={taskList[i].id}>{taskList[i].task}\r\n            <i class=\"material-icons\">play_circle_outline</i>\r\n          </li>     \r\n        )\r\n      }\r\n    } \r\n\r\n\r\n    return (\r\n      <div class=\"tasks-group\">\r\n        <ul>\r\n          {list}\r\n        </ul>\r\n        {showMore}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskGroup","import React from 'react'\r\n\r\nclass Clock extends React.Component {\r\n\r\n  render () {\r\n    return (\r\n    <div class=\"clock-wrapper\">\r\n      <div class=\"clock-main\">\r\n        <div class=\"clock-btn\" onClick={this.props.changeClockState}>\r\n          <i class=\"material-icons clock-icon\">play_arrow</i>\r\n          <span class=\"clock-decoration\"></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Clock\r\n","import React from 'react'\r\n\r\nimport AddTask from './AddTask.js'\r\nimport TaskGroup from './TaskGroup.js'\r\nimport Clock from './Clock.js'\r\n\r\nfunction changeTheme(state) {\r\n  const clockWrapper = document.querySelector('.clock-wrapper')\r\n  const clockMain = document.querySelector('.clock-main')\r\n  const clockBtn = document.querySelector('.clock-btn')\r\n  const materialIcons = document.querySelector('.clock-btn > .material-icons')\r\n  const clockDecoration = document.querySelector('.clock-decoration')\r\n\r\n  clockWrapper.classList.toggle('sub-theme')\r\n  clockMain.classList.toggle('main-theme')\r\n  clockBtn.classList.toggle('sub-theme')\r\n  materialIcons.innerHTML =  (materialIcons.innerHTML === 'play_arrow') ? 'pause' : 'play_arrow'\r\n  materialIcons.classList.toggle('main-theme-font')\r\n  clockDecoration.classList.toggle('sub-theme')\r\n}\r\n\r\nclass Container extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state={\r\n      task: '',\r\n      taskList: [],\r\n      activating: false,\r\n      resting: false,\r\n      countDown: 1500\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.changeClockState = this.changeClockState.bind(this)\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { value } = e.target\r\n    this.setState({\r\n      task: value\r\n    })\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (!this.state.task) return\r\n\r\n    const newTask = {\r\n      task: this.state.task,\r\n      id: Date.now()\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      taskList: prevState.taskList.concat(newTask),\r\n      task: '',\r\n      id: ''\r\n    }))\r\n  }\r\n\r\n  countDown() {\r\n    this.setState(state => ({\r\n      countDown: state.countDown - 1\r\n    }));\r\n  }\r\n\r\n  changeClockState(e) {\r\n\r\n    if (this.state.activating || this.state.resting) {\r\n      // pause\r\n      clearInterval(this.interval);\r\n\r\n    } else {\r\n      // activating\r\n      this.interval = setInterval(() => this.countDown(), 1000);\r\n\r\n    }\r\n    this.setState({ activating: !this.state.activating })\r\n    changeTheme()\r\n  }\r\n\r\n  render() {\r\n    const { taskList, countDown } = this.state\r\n\r\n    let showActivityTask = []\r\n    if (taskList.length > 0) {\r\n      showActivityTask.push(\r\n        <div class=\"activity-task\" key={Date.now()}>\r\n          <span class=\"circle-lg main-decoration\"></span>\r\n          <h3>{taskList[0].task}</h3>\r\n          <span class=\"circle-sm sub-decoration\"></span>\r\n          <div>{ Math.floor(countDown / 60).toString().padStart(2, '0') }\r\n                :{ (countDown % 60).toString().padStart(2, '0')}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      showActivityTask.push(\r\n        <div class=\"activity-task\" key={Date.now()}>\r\n          <h3>No task? Add one.</h3>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  return (\r\n    <div class=\"container\">\r\n      <div class=\"main-panel\">\r\n        <AddTask\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n          changeClockState={this.changeClockState}\r\n          task={this.state.task}\r\n        />\r\n        {showActivityTask}\r\n        <TaskGroup\r\n          taskList={taskList}\r\n        />\r\n      </div>\r\n      <div class=\"sub-panel\">\r\n        <nav class=\"nav\">\r\n          <ul>\r\n            <li class=\"to-do-list-folded\">\r\n              <i class=\"material-icons\">list</i>\r\n            </li>\r\n\r\n            <li class=\"analytics\">\r\n              <i class=\"material-icons\">insert_chart</i>\r\n            </li>\r\n\r\n            <li class=\"ringtones\">\r\n              <i class=\"material-icons\">library_music</i>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div class=\"logo\">\r\n          <div>pomodoro</div>\r\n        </div>\r\n      </div>\r\n      <Clock changeClockState={this.changeClockState}/>\r\n    </div>\r\n  )}\r\n}\r\n\r\nexport default Container\r\n","import React from 'react';\r\nimport './App.css'\r\n\r\nimport Container from './components/Container.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <Container />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}